AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  EmailAddress:
    Type: String
    Description: Dirección de correo a usar en SNS
    Default: usuario@example.com

Resources:
  FondosGestionarFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "FondosGestionar"
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      CodeUri: ./backend/fondos_gestionar
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosProductos
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosGestionarProductos
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosMovimientos
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosUser
      Environment:
        Variables:
          AWS_REGION_SERVICES: !Sub "${AWS::Region}"
          TABLE_FONDOS_PRODUCTOS: !Ref TableFondosProductos
          TABLE_FONDOS_GESTIONAR_PRODUCTOS: !Ref TableFondosGestionarProductos
          TABLE_FONDOS_MOVIMIENTOS: !Ref TableFondosMovimientos
          NOTIFY_EMAIL_SOURCE: !Ref EmailAddress
      Layers:
        - !Ref LayerSchema
      Events:
        Api:
          Type: Api
          Properties:
            Path: /fondos-gestionar
            Method: ANY

  FondosMovimientosFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "FondosMovimientos"
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      CodeUri: ./backend/fondos_movimientos
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosMovimientos
      Environment:
        Variables:
          AWS_REGION_SERVICES: !Sub "${AWS::Region}"
          TABLE_FONDOS_MOVIMIENTOS: !Ref TableFondosMovimientos
      Layers:
        - !Ref LayerSchema
      Events:
        HelloAPI:
          Type: Api
          Properties:
            Path: /fondos-movimientos
            Method: ANY

  FondosUserFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "FondosUser"
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      CodeUri: ./backend/fondos_user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosUser
        - DynamoDBCrudPolicy:
            TableName: !Ref TableFondosGestionarProductos
      Environment:
        Variables:
          AWS_REGION_SERVICES: !Sub "${AWS::Region}"
          TABLE_FONDOS_GESTIONAR_PRODUCTOS: !Ref TableFondosGestionarProductos
      Layers:
        - !Ref LayerSchema
      Events:
        HelloAPI:
          Type: Api
          Properties:
            Path: /fondos-user
            Method: ANY

  # ===== S3 PARA FRONTEND =====
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-frontend"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: false
        IgnorePublicAcls: true
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # ===== OAI PARA CLOUDFRONT =====
  FrontendOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "Access Identity for ${AWS::StackName} frontend bucket"

  # ===== POLICY PARA S3 =====
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt FrontendOAI.S3CanonicalUserId
            Action: "s3:GetObject"
            Resource: !Sub "${FrontendBucket.Arn}/*"

  # ===== CLOUDFRONT =====
  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - DomainName: !GetAtt FrontendBucket.RegionalDomainName
            Id: FrontendS3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${FrontendOAI}"
        DefaultCacheBehavior:
          TargetOriginId: FrontendS3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - HEAD
            - GET
            - OPTIONS
          CachedMethods:
            - HEAD
            - GET
            - OPTIONS
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  TableFondosProductos:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: fondos_product
      PrimaryKey:
        Name: id
        Type: String

  TableFondosGestionarProductos:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: fondos_gestionar_productos
      PrimaryKey:
        Name: id
        Type: String

  TableFondosMovimientos:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: fondos_movimientos
      PrimaryKey:
        Name: id
        Type: String

  TableFondosUser:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: fondos_user
      PrimaryKey:
        Name: id
        Type: String

  LayerSchema:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lib-schema
      Description: "Capa con la librería schema"
      ContentUri: layer/
      CompatibleRuntimes:
        - python3.11

Outputs:
  CloudFrontURL:
    Description: URL pública de CloudFront
    Value: !Sub "https://${FrontendDistribution.DomainName}"
  WebsiteURL:
    Description: URL del sitio web estático en S3
    Value: !GetAtt FrontendBucket.WebsiteURL

  MyApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
