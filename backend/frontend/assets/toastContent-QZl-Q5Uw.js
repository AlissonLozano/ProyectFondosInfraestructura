import{y}from"./index-DrSlDiwp.js";const O=n=>Intl.NumberFormat("es-CO",{style:"currency",currency:"COP",maximumFractionDigits:n,minimumFractionDigits:0}),C=O(2),b=async(n,e,t={},i={},c=6e4)=>{if(!["GET","POST","PUT","DELETE"].includes(e))throw new Error("Method not suported");let r=n;if((e==="GET"||e==="PUT")&&Object.keys(t).length>0){const s=Object.entries(t).map(([a,p])=>`${a}=${p}`).join("&");r+=`?${s}`}const o={method:e};o.headers={},(e==="POST"||e==="PUT")&&(o.headers["Content-Type"]="application/json",o.body=JSON.stringify(i));async function g(s,a,p){const f=new AbortController,d=setTimeout(()=>f.abort(),p),m=await fetch(s,{...a,signal:f.signal});return clearTimeout(d),m}const l=await g(r,o,c),u=l.headers.get("content-type");if(u&&u.includes("application/json"))return await l.json()},P=(n,e=5e3,t={})=>{y.warning(n,{position:"top-center",hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,...t,autoClose:e})},j=(n,e={render:()=>"Pending ..."},t={render:({data:r})=>`Success ${JSON.stringify(r)}`},i={render:({data:r})=>`Error ${JSON.stringify(r)}`},c)=>{y.promise(n,{pending:{type:"info",...e},error:{type:"warning",closeOnClick:!1,...i},success:{type:"info",...t}},c)};export{b as a,j as b,C as f,P as t};
